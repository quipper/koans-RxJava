{
  "summary" : "RxJava in Kotlin koans.",
  "title" : "koans-RxJava",
  "programming_language" : "kotlin",
  "language" : "en",
  "course_type" : "PyCharm",
  "items" : [
    {
      "title" : "lesson1",
      "task_list" : [
        {
          "name" : "Observable",
          "files" : {
            "src/Task.kt" : {
              "name" : "src/Task.kt",
              "placeholders" : [
                {
                  "offset" : 77,
                  "length" : 6,
                  "possible_answer" : "return Observable.just(value)",
                  "placeholder_text" : "TODO()"
                }
              ],
              "is_visible" : true,
              "text" : "import io.reactivex.Observable\n\nfun solve(value: Int): Observable<Int> {\n    TODO()\n}\n"
            },
            "test/Tests.kt" : {
              "name" : "test/Tests.kt",
              "placeholders" : [ ],
              "is_visible" : false,
              "text" : "import org.junit.Test\n\nclass Test {\n    @Test\n    fun solve() {\n        solve(5)\n            .test()\n            .assertResult(5)\n    }\n}\n"
            }
          },
          "description_text" : "",
          "description_format" : "HTML",
          "feedback_link" : {
            "link_type" : "STEPIK"
          },
          "task_type" : "edu"
        }
      ],
      "type" : "lesson"
    }
  ],
  "additional_files" : [
    {
      "name" : "build.gradle",
      "placeholders" : [ ],
      "is_visible" : true,
      "text" : "buildscript {\n    ext.kotlin_version = '1.4.30'\n\n    repositories {\n        mavenCentral()\n        \n    }\n\n    dependencies {\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n    }\n}\n\ndef printOutput(def output) {\n    return tasks.create(\"printOutput\") {\n        for (line in output.toString().readLines()) {\n            println \"#educational_plugin\" + line\n        }\n    }\n}\n\nsubprojects {\n    apply plugin: 'application'\n    apply plugin: 'java'\n    apply plugin: 'kotlin'\n\n    sourceCompatibility = 1.8\n\n    repositories {\n        mavenCentral()\n        \n    }\n\n    dependencies {\n        compile \"org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version\"\n        testCompile group: 'junit', name: 'junit', version: '4.12'\n\n        implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version\"\n        implementation 'io.reactivex.rxjava2:rxjava:2.2.20'\n\n        testImplementation \"junit:junit:4.12\"\n        testImplementation \"org.assertj:assertj-core:3.10.0\"\n    }\n\n    compileKotlin.destinationDir = compileJava.destinationDir\n\n    compileKotlin {\n        kotlinOptions.jvmTarget = \"1.8\"\n    }\n    compileTestKotlin {\n        kotlinOptions.jvmTarget = \"1.8\"\n    }\n\n    sourceSets {\n        main {\n            kotlin.srcDir 'src'\n            java.srcDir 'src'\n        }\n        test {\n            kotlin.srcDir 'test'\n            java.srcDir 'test'\n        }\n    }\n\n    mainClassName = project.hasProperty(\"mainClass\") ? project.getProperty(\"mainClass\") : \"\"\n    test {\n        outputs.upToDateWhen { false }\n        afterTest { TestDescriptor test, TestResult result ->\n            if (result.resultType == TestResult.ResultType.FAILURE) {\n                def message = result.exception?.message ?: \"Wrong answer\"\n                def lines = message.readLines()\n                println \"#educational_plugin FAILED + \" + lines[0]\n                lines.subList(1, lines.size()).forEach { line ->\n                  println \"#educational_plugin\" + line\n                }\n                // we need this to separate output of different tests\n                println()\n            }\n        }\n    }\n\n    def runOutput = new ByteArrayOutputStream()\n    tasks.run.setStandardOutput(runOutput)\n    tasks.run.doLast { printOutput(runOutput) }\n}\n\nproject(':util') {\n    dependencies {\n        compile group: 'junit', name: 'junit', version: '4.12'\n    }\n}\n\nconfigure(subprojects.findAll {it.name != 'util'}) {\n  dependencies {\n    compile project(':util').sourceSets.main.output\n    testCompile project(':util').sourceSets.test.output\n  }\n}\n"
    },
    {
      "name" : "settings.gradle",
      "placeholders" : [ ],
      "is_visible" : true,
      "text" : "static String sanitizeName(String name) {\n    return name.replaceAll(\"[ /\\\\\\\\:<>\\\"?*|()]\", \"_\").replaceAll(\"(^[.]+)|([.]+\\$)\", \"\")\n}\n\nrootProject.name = 'koans-RxJava'\n\nrootProject.projectDir.eachDirRecurse {\n    if (!isTaskDir(it) || it.path.contains(\".idea\")) {\n        return\n    }\n    def taskRelativePath = rootDir.toPath().relativize(it.toPath())\n    def parts = []\n    for (name in taskRelativePath) {\n        parts.add(sanitizeName(name.toString()))\n    }\n    def moduleName =  parts.join(\"-\")\n    include \"$moduleName\"\n    project(\":$moduleName\").projectDir = it\n}\n\ndef isTaskDir(File dir) {\n    return new File(dir, \"src\").exists()\n}\n\ninclude 'util'\n"
    }
  ],
  "version" : 11
}